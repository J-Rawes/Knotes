<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Select a File</title>
    </head>
    <body>
        <h1>Select a File</h1>
        <div id="label">No File Loaded</div>
        <button id="button">Select File</button>
        <div id="confirm" style="display: none;"></div>
        
        <script>
            //Creates button to enter a file of only certain types
            document.getElementById('button').addEventListener('click', () => { //When the button is clicked
                const input = document.createElement('input'); //Creates an input element
                input.type = 'file';
                input.accept = '.png,.jpg,.jpeg,.heic'; //Allowed file types, subject to change
                
                input.onchange = async (event) => { //Pause a moment to allow the file to be loaded
                    const file = event.target.files[0]; //Get the file
                    if(file){ //If a file is selected
                        var fileName = file.name;
                        const fileExtension = fileName.split('.').pop().toLowerCase(); //Split at the '.' in the file name then return the extension   WHAT IF THERE IS MORE THAN ONE!!!!!!!!!!!!!!!!

                        //Displays the file name]
                        document.getElementById('label').innerText = 'File selected: ' + fileName;

                        //Checks if the file is of the correct type
                        const validExtensions = ['png', 'jpg', 'jpeg', 'heic']; //Allowed file types, subject to change
                        if(validExtensions.includes(fileExtension)){
                            //Displays a message if the file is valid
                            document.getElementById('confirm').style.display = 'block';
                            document.getElementById('confirm').innerText = 'File is valid';
                            
                        //Convert to png if not already
                        if(fileExtension !== 'png'){
                            const temp = await convertToPng(file); //I used await here to pause the function until the conversion is complete (the GUI needs to keep running)                           
                            var newFile = fileName.split('.').slice(0, -1).join('.'); // Remove the original extension
                            newFile += '.png';
                            downloadBlob(temp, newFile); //Download the file
                        }
                        } else {
                            //Displays a message if the file is not valid
                            document.getElementById('confirm').style.display = 'block';
                            document.getElementById('confirm').innerText = 'File is not valid';
                    }              
                }
            };
            
            input.click(); //Clicks the input element because it is invisible
            });

            //Converts the file to a png by reading the file and converting it to a data URL
            async function convertToPng(file){
                const reader = new FileReader();
                reader.readAsDataURL(file);

                //this returns a promise that resolves to the data URL when the file is read
                return new Promise((resolve, reject) => { //Promise works hand in hand with await to pause the function until the conversion is complete
                    reader.onload = (event) => {
                        const img = new Image();
                        img.src = event.target.result;

                        //When the image is loaded, create a canvas and draw the image on it
                        img.onload = () => {
                            const canvas = document.createElement('canvas');
                            canvas.width = img.width;
                            canvas.height = img.height;
                            const ctx = canvas.getContext('2d');
                            ctx.drawImage(img, 0, 0);

                            canvas.toBlob((blob) => { //Converts the contents of the canvus to a blob (image)
                                resolve(blob); //Resolves the promise with the blob
                            }, 'image/png'); //Ensures the blob is of type png


                            //TLDR The blob is the image in a format that can be downloaded, so we take the image, draw it on a canvas, then convert the canvas to a blob
                           
                        };
                    };
                });
            }
        
            //Trigger download by an invisible link that is automatically clicked
            function downloadBlob(blob, fileName) {
                const link = document.createElement('a'); //Creates a link element
                link.href = URL.createObjectURL(blob); //Creates a URL for the blob 
                link.download = fileName;
                link.click();

                URL.revokeObjectURL(link.href); //Clean up the link if needed I guess...
            }

            
        </script>
    </body>
</html>
